'''
copyright: Copyright (C) 2015-2021, Wazuh Inc.

           Created by Wazuh, Inc. <info@wazuh.com>.

           This program is free software; you can redistribute it and/or modify it under the terms of GPLv2

type: integration

brief: These tests will check if the `enabled` option of the Vulnerability Detector module
       is working correctly. This option is located in its corresponding section of
       the `ossec.conf` file and allows enabling or disabling this module.

tier: 0

modules:
    - vulnerability_detector

components:
    - manager

daemons:
    - wazuh-modulesd
    - wazuh-db
    - wazuh-analysisd

os_platform:
    - linux

os_version:
    - Arch Linux
    - Amazon Linux 2
    - Amazon Linux 1
    - CentOS 8
    - CentOS 7
    - CentOS 6
    - Ubuntu Focal
    - Ubuntu Bionic
    - Ubuntu Xenial
    - Ubuntu Trusty
    - Debian Buster
    - Debian Stretch
    - Debian Jessie
    - Debian Wheezy
    - Red Hat 8
    - Red Hat 7
    - Red Hat 6

references:
    - https://documentation.wazuh.com/current/user-manual/capabilities/vulnerability-detection/index.html
    - https://documentation.wazuh.com/current/user-manual/reference/ossec-conf/vuln-detector.html#enabled

tags:
    - general_settings
    - settings
    - vulnerability
    - vulnerability_detector
'''
import os
import pytest

from wazuh_testing.tools.configuration import load_configuration_template, get_test_cases_data
from wazuh_testing.modules.vulnerability_detector import event_monitor as evm


pytestmark = [pytest.mark.server]

# Reference paths
TEST_DATA_PATH = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'data')
CONFIGURATIONS_PATH = os.path.join(TEST_DATA_PATH, 'configuration_template')
TEST_CASES_PATH = os.path.join(TEST_DATA_PATH, 'test_cases')

# Configuration and cases data
configurations_path = os.path.join(CONFIGURATIONS_PATH, 'configuration_enabled.yaml')
enabled_test_cases_path = os.path.join(TEST_CASES_PATH, 'cases_enabled.yaml')
disabled_test_cases_path = os.path.join(TEST_CASES_PATH, 'cases_disabled.yaml')

# Enabled test configurations
enabled_configuration_parameters, enabled_configuration_metadata, enabled_test_case_ids = \
    get_test_cases_data(enabled_test_cases_path)
enabled_configurations = load_configuration_template(configurations_path, enabled_configuration_parameters,
                                                     enabled_configuration_metadata)
# Disabled test configurations
disabled_configuration_parameters, disabled_configuration_metadata, disabled_test_case_ids = \
    get_test_cases_data(disabled_test_cases_path)
disabled_configurations = load_configuration_template(configurations_path, disabled_configuration_parameters,
                                                      disabled_configuration_metadata)


@pytest.mark.tier(level=0)
@pytest.mark.parametrize('configuration, metadata', zip(enabled_configurations, enabled_configuration_metadata),
                         ids=enabled_test_case_ids)
def test_enabled(configuration, metadata, set_wazuh_configuration, truncate_monitored_files, restart_modulesd_function):
    '''
    description: Check if the `enabled ` option is working correctly when setting `yes`. To do this,
                 it checks the `ossec.log` file for the message indicating that the
                 Vulnerability Detector is enabled or disabled.

    wazuh_min_version: 4.2.0

    parameters:
        - configuration:
            type: dict
            brief: Wazuh configuration data. Needed for set_wazuh_configuration fixture.
        - metadata:
            type: dict
            brief: Wazuh configuration metadata.
        - set_wazuh_configuration:
            type: fixture
            brief: Set the wazuh configuration according to the configuration data.
        - truncate_monitored_files:
            type: fixture
            brief: Truncate all the log files and json alerts files before and after the test execution.
        - restart_modulesd_function:
            type: fixture
            brief: Restart the wazuh-modulesd daemon.

    assertions:
        - Verify that when the `enabled` option is set to `yes`, the Vulnerability Detector module is running.

    input_description:
        - The `test_enabled.yaml` file provides the module configuration for this test.

    expected_output:
        - r'NOT (.*)wazuh-modulesd:vulnerability-detector(.*) Module disabled. Exiting...'
    '''
    with pytest.raises(TimeoutError):
        evm.check_vulnerability_detector_disabled()


@pytest.mark.tier(level=0)
@pytest.mark.parametrize('configuration, metadata', zip(disabled_configurations, disabled_configuration_metadata),
                         ids=disabled_test_case_ids)
def test_disabled(configuration, metadata, set_wazuh_configuration, truncate_monitored_files,
                  restart_modulesd_function):
    '''
    description: Check if the `enabled` option is working correctly when setting `no`. To do this,
                 it checks the `ossec.log` file for the message indicating that the
                 Vulnerability Detector is enabled or disabled.

    wazuh_min_version: 4.2.0

    parameters:
        - configuration:
            type: dict
            brief: Wazuh configuration data. Needed for set_wazuh_configuration fixture.
        - metadata:
            type: dict
            brief: Wazuh configuration metadata.
        - set_wazuh_configuration:
            type: fixture
            brief: Set the wazuh configuration according to the configuration data.
        - truncate_monitored_files:
            type: fixture
            brief: Truncate all the log files and json alerts files before and after the test execution.
        - restart_modulesd_function:
            type: fixture
            brief: Restart the wazuh-modulesd daemon.

    assertions:
        - Verify that when the `enabled` option is set to `no`, the Vulnerability Detector module does not start.

    input_description:
        - The `test_disabled.yaml` file provides the module configuration for this test.

    expected_output:
        - r'(.*)wazuh-modulesd:vulnerability-detector(.*) Module disabled. Exiting...'
    '''
    evm.check_vulnerability_detector_disabled()
